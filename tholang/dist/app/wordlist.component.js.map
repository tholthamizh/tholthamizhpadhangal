{"version":3,"file":"wordlist.component.js","sourceRoot":"","sources":["../Users/ssaravanamuthu/tholang/tholang/tmp/broccoli_type_script_compiler-input_base_path-oPw6q7zB.tmp/0/src/app/wordlist.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { WordListType } from './word-list-type'\nimport {WordService} from './words.service'\n\t \n\n@Component({\n  selector: 'wordlist', \n  template:`\n  \t<div class=\"row\">\n  \t\t<div class=\"col-md-2\">\n\t  \t\t<br/>\n\t  \t\t<button type=\"button\" class=\"btn btn-primary\" (click)=\"shuffle()\">குலுக்கு</button>\n\t  \t\t<br/><br/>\n\t  \t\t<button type=\"button\" id=\"shuffle\" class=\"btn btn-primary\" (click)=\"randomSel()\">நிரைமுறை இன்றி எடு </button>\n\t  \t\t<br/>\n\t  \t</div>\n\t  \t<div class=\"col-md-10\">\n\t  \t\t<h4>{{selectedWord}}</h4>\n\t  \t\t<p [innerHTML]=\"desc\"></p>\n\t  \t</div>\n  \t</div>\n  \t<table class='table table-hover'>\n  \t\t<thead><tr><td>பதம்({{wordList.length}})</td></tr></thead><tbody>\n  \t\t<tbody>  \t\t\n  \t\t\t<tr *ngFor=\"let wordl of words\">\n  \t\t\t\t<td *ngFor=\"let word of wordl.words\" (click)=\"getWordDetail(word)\">{{word}}</td>\n  \t\t\t</tr>\n  \t\t</tbody>\n  \t</table>\n\n  `\n})\n\nexport class WordlistComponent extends OnInit{\n  constructor(private wordService: WordService) \n  {\n  \tsuper();\n  }\n  \n  wordList: String[] = [];\n  words: WordListType[] = [];\n  count = 0;\n  selectedWord = '';\n  desc='';\n  \n  ngOnInit(){\n    this.wordService.getWordList().subscribe(\n    \tdata => {\n    \t\tthis.wordList = data.words;\n    \t\tthis.convertWordList();\n    \t},\n    \terr => {\n    \t\tconsole.error(err);\n    \t}\n    );\n          \t\n  }\n\n  randomSel(){\n  \tvar item = this.wordList[Math.floor(Math.random()*this.wordList.length)];\n  \tthis.getWordDetail(item);\n  }\n  \n  getWordDetail(word){\n  \tthis.wordService.getWordDesc(word).subscribe(\n  \t\tdata => {\n  \t\t\tthis.selectedWord = word;\n  \t\t\tthis.desc = data.meaning;\n  \t\t},\n  \t\terr => {\n  \t\t\tconsole.error(err); \n  \t\t}\n  \t);\t\n  }\n\n  convertWordList(){\n  \tthis.words=[];\n  \tvar index = 0;\n  \tvar currentArr = [];  \t\n  \twhile(index<this.wordList.length){\n  \t\tif(currentArr.length<6){\n  \t\t\tcurrentArr.push(this.wordList[index]);\n  \t\t}else{\n  \t\t\tthis.words.push({words: currentArr});\n  \t\t\tcurrentArr = [];\n  \t\t\tcurrentArr.push(this.wordList[index]);\n  \t\t}\n  \t\tindex++; \n  \t}\n  \tthis.words.push({words: currentArr});\n  }\n\n  shuffle(){\n  \t  var currentIndex = this.wordList.length, temporaryValue, randomIndex;\n\n  \t\t// While there remain elements to shuffle...\n\t  while (0 !== currentIndex) {\n\n\t    // Pick a remaining element...\n\t    randomIndex = Math.floor(Math.random() * currentIndex);\n\t    currentIndex -= 1;\n\n\t    // And swap it with the current element.\n\t    temporaryValue = this.wordList[currentIndex];\n\t    this.wordList[currentIndex] = this.wordList[randomIndex];\n\t    this.wordList[randomIndex] = temporaryValue;\n\t  }\n\t  this.convertWordList();\n  }\n}"]}